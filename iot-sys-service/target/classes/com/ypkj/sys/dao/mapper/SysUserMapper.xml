<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ypkj.sys.dao.mapper.SysUserMapper" >
  <resultMap id="BaseResultMap" type="com.ypkj.sys.dao.entity.SysUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="org_id" property="orgId" jdbcType="INTEGER" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="mobile_tel" property="mobileTel" jdbcType="VARCHAR" />
    <result column="mail" property="mail" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, account, password, name, org_id, telephone, mobile_tel, mail, state, remarks, 
    create_id, create_date, update_id, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ypkj.sys.dao.entity.SysUser" >
    insert into sys_user (id, account, password, 
      name, org_id, telephone, 
      mobile_tel, mail, state, 
      remarks, create_id, create_date, 
      update_id, update_date)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{orgId,jdbcType=INTEGER}, #{telephone,jdbcType=VARCHAR}, 
      #{mobileTel,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{createId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ypkj.sys.dao.entity.SysUser" >
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="mobileTel != null" >
        mobile_tel,
      </if>
      <if test="mail != null" >
        mail,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="mobileTel != null" >
        #{mobileTel,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ypkj.sys.dao.entity.SysUser" >
    update sys_user
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="mobileTel != null" >
        mobile_tel = #{mobileTel,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ypkj.sys.dao.entity.SysUser" >
    update sys_user
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      org_id = #{orgId,jdbcType=INTEGER},
      telephone = #{telephone,jdbcType=VARCHAR},
      mobile_tel = #{mobileTel,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <resultMap id="userauthoirtymap" type="com.ypkj.sys.dao.entity.SysUser" >
    <collection property="sysAuthoritys">  
            <id column="authority_id" property="id" jdbcType="INTEGER" />
		    <result column="name" property="name" jdbcType="VARCHAR" />
		    <result column="menu_name" property="menuName" jdbcType="VARCHAR" />
		    <result column="code" property="code" jdbcType="VARCHAR" />
		    <result column="type" property="type" jdbcType="INTEGER" />
		    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
		    <result column="url" property="url" jdbcType="VARCHAR" />
		    <result column="order_num" property="orderNum" jdbcType="INTEGER" />
		    <result column="create_id" property="createId" jdbcType="INTEGER" />
		    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		    <result column="update_id" property="updateId" jdbcType="INTEGER" />
		    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />  
        </collection> 
  </resultMap>
  
  <select id="selectUserAuthoirty" resultMap="userauthoirtymap"
		parameterType="string">
		SELECT u.*,a.* FROM sys_user u LEFT JOIN sys_user_role ur ON u.id =
		ur.user_id
		LEFT JOIN sys_role r ON ur.role_id = u.id
		LEFT JOIN sys_role_authority ra ON r.id = ra.role_id
		LEFT JOIN sys_authority a ON ra.authority_id = a.id
		WHERE u.account = #{account}
	</select>
</mapper>